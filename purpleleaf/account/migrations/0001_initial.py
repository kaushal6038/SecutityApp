# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-12-18 10:07
from __future__ import unicode_literals

import account.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=64, null=True, verbose_name='name')),
                ('email', models.EmailField(max_length=256, unique=True, verbose_name='email address')),
                ('qrcode', models.URLField(blank=True, max_length=500, null=True, verbose_name='qr code')),
                ('secret_key', models.CharField(blank=True, max_length=20, null=True, verbose_name='secret key')),
                ('activation_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='activation key')),
                ('authentication_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='auth key')),
                ('key_expires', models.DateTimeField(blank=True, null=True, verbose_name='key expires')),
                ('authenticated', models.BooleanField(default=False, verbose_name='authenticated')),
                ('email_confirmed', models.BooleanField(default=False, verbose_name='email confirmed')),
                ('twofa_status', models.BooleanField(default=False, verbose_name='twofa status')),
                ('twofa_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='twofa type')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='phone number')),
                ('redtree_user_id', models.CharField(blank=True, max_length=10, null=True, verbose_name='redtree id')),
                ('time_zone', models.CharField(blank=True, max_length=50, null=True, verbose_name='time zone')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['date_joined'],
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccessAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_accessattempt_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_accessattempt_last_modified_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Access Attempts',
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=False)),
                ('mailgun_api_key', models.CharField(blank=True, max_length=1000, null=True)),
                ('hostname', models.CharField(blank=True, max_length=500, null=True)),
                ('mailgun_base_url', models.CharField(blank=True, max_length=500, null=True)),
                ('redtree_auth_key', models.CharField(blank=True, max_length=500, null=True)),
                ('twilio_account_sid', models.CharField(blank=True, max_length=500, null=True)),
                ('twilio_auth_key', models.CharField(blank=True, max_length=500, null=True)),
                ('twilio_account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('application_status', models.BooleanField(default=False)),
                ('analytics_status', models.BooleanField(default=False)),
                ('storage_type', models.CharField(blank=True, max_length=20, null=True)),
                ('s3_access_token', models.CharField(blank=True, max_length=500, null=True)),
                ('s3_secret_access_token', models.CharField(blank=True, max_length=500, null=True)),
                ('s3_bucket_name', models.CharField(blank=True, max_length=200, null=True)),
                ('pre_signed_time_length', models.IntegerField(blank=True, null=True)),
                ('session_timeout_length', models.IntegerField(blank=True, default=43200, null=True)),
                ('manual_hours_purchased', models.CharField(blank=True, max_length=200, null=True)),
                ('manual_hours_remaining', models.CharField(blank=True, max_length=200, null=True)),
                ('max_ips', models.CharField(blank=True, max_length=200, null=True)),
                ('aws_access_token', models.CharField(blank=True, max_length=200, null=True)),
                ('aws_secret_token', models.CharField(blank=True, max_length=200, null=True)),
                ('auth_reset', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_configuration_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_configuration_last_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Configurations',
            },
        ),
        migrations.CreateModel(
            name='PrivateConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('redtree_base_url', models.CharField(blank=True, max_length=500, null=True)),
                ('data_auth_key', models.CharField(blank=True, max_length=500, null=True)),
                ('auth_reset', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_privateconfiguration_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_privateconfiguration_last_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'PrivateConfigurations',
            },
        ),
    ]
